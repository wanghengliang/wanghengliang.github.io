<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hengliang</title>
    <description>快乐地创造和品味生活</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 26 Apr 2021 15:06:44 +0800</pubDate>
    <lastBuildDate>Mon, 26 Apr 2021 15:06:44 +0800</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>MacOS安装docker及kubernetes</title>
        <description>&lt;p&gt;MacOS安装docker及kubernetes&lt;/p&gt;

&lt;h3 id=&quot;安装docker-for-mac&quot;&gt;安装Docker for Mac&lt;/h3&gt;

&lt;p&gt;直接在 &lt;a href=&quot;https://www.docker.com/products/docker-desktop&quot;&gt;官网&lt;/a&gt;、&lt;a href=&quot;https://hub.docker.com/editions/community/docker-ce-desktop-mac&quot;&gt;官网Hub&lt;/a&gt; 下载安装。&lt;/p&gt;

&lt;h3 id=&quot;安装kubernetes&quot;&gt;安装Kubernetes&lt;/h3&gt;

&lt;p&gt;正常情况下，在Mac中安装了Docker桌面版之后，可以通过Docker安装Kubernetes，我们只需要在Docker的Preferrences-&amp;gt;Kubernetes中勾选Enable Kubernetes，然后点击&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Apply &amp;amp; Restart&lt;/code&gt;钮即可。
但由于国内网络原因，有一些Kubernetes依赖的镜像不能正常的下载，如果您是直接在Docker中启用Kubernetes，Kubernetes的状态会一直都是kubernetes is starting…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决办法&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;利用 &lt;a href=&quot;https://developer.github.com/actions/creating-github-actions/&quot;&gt;GitHub Actions&lt;/a&gt; 实现 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k8s.gcr.io&lt;/code&gt; 上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kubernetes&lt;/code&gt; 依赖镜像自动同步到 &lt;a href=&quot;https://hub.docker.com/&quot;&gt;Docker Hub&lt;/a&gt; 上指定的仓库中。 再将所需镜像从 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Docker Hub&lt;/code&gt; 的同步仓库中取回，并重新打上原始的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tag&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Github上有个开源项目就是这样做的，所有我们可以通过此开源项目拉取kubernetes镜像，具体操作如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;克隆此开源项目&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone git@github.com:maguowei/k8s-docker-desktop-for-mac.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;查看kubernetes版本号&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;进入此开源项目查看images文件，查看版本是否和docker对应的kubernetes版本相同，Docker的Preferrences-&amp;gt;Kubernetes可查看对应版本，我的是v1.19.7版本&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd k8s-docker-desktop-for-mac
$ cat images
k8s.gcr.io/kube-proxy:v1.19.7=gotok8s/kube-proxy:v1.19.7
k8s.gcr.io/kube-controller-manager:v1.19.7=gotok8s/kube-controller-manager:v1.19.7
k8s.gcr.io/kube-scheduler:v1.19.7=gotok8s/kube-scheduler:v1.19.7
k8s.gcr.io/kube-apiserver:v1.19.7=gotok8s/kube-apiserver:v1.19.7
k8s.gcr.io/coredns:1.7.0=gotok8s/coredns:1.7.0
k8s.gcr.io/pause:3.2=gotok8s/pause:3.2
k8s.gcr.io/etcd:3.4.13-0=gotok8s/etcd:3.4.13-0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果你的版本不同，可通过以下命令修改版本为v1.15.5&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sed -i '' &quot;s/v1.19.7/v1.15.5/g&quot; images
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;拉取kubernetes镜像
然后通过此开源项目提供的脚本从 Docker Hub 的同步仓库中取回kubernetes镜像，并重新打上原始的tag.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./load_images.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;拉取完成后再通过Docker设置中启用 Kubernetes 选项, 并等待一会儿，直到 Kubernetes 开始运行。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Docker的Preferrences-&amp;gt;Kubernetes中勾选Enable Kubernetes，然后点击&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Apply &amp;amp; Restart&lt;/code&gt;钮即可&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://wanghengliang.cn/images/posts/k8s/mac_docker_kubernetes.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;验证 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kubernetes&lt;/code&gt; 集群状态&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ kubectl cluster-info
$ kubectl get nodes
$ kubectl describe node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 26 Apr 2021 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2021/04/k8s-install-for-mac/</link>
        <guid isPermaLink="true">http://localhost:4000/2021/04/k8s-install-for-mac/</guid>
        
        <category>kubernetes</category>
        
        
        <category>k8s</category>
        
      </item>
    
      <item>
        <title>java应用部署到linux出现中文乱码</title>
        <description>&lt;p&gt;java应用部署到linux出现中文乱码&lt;/p&gt;

&lt;h3 id=&quot;问题描述&quot;&gt;问题描述&lt;/h3&gt;

&lt;p&gt;应用部署在本地一切正常，部署到linux服务器后出现两个问题&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;swagger出现乱码页面无法跳转&lt;/li&gt;
  &lt;li&gt;flowable流程图出现乱码&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;问题出现的原因&quot;&gt;问题出现的原因&lt;/h3&gt;

&lt;p&gt;因为linux没有相应的中文字体&lt;/p&gt;

&lt;h3 id=&quot;问题解决办法&quot;&gt;问题解决办法&lt;/h3&gt;

&lt;p&gt;下载或者从本机拷贝相应中文字体文件，放到jdk字体目录下即可&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/java/jdk1.8.0_261/jre/lib/fonts/&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果是采用默认java最好重新安装java&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rpm -qa |grep jdk
java-1.8.0-openjdk-headless-1.8.0.275.b01-1.el8_3.x86_64
copy-jdk-configs-3.7-4.el8.noarch
$ rpm -e --nodeps  java-1.8.0-openjdk-headless-1.8.0.275.b01-1.el8_3.x86_64
$ rpm -e --nodeps copy-jdk-configs-3.7-4.el8.noarch
## 解压jdk安装包
$ cp jdk-8u261-linux-x64.tar.gz /usr/java/
$ cd /usr/java/
$ tar -zxvf jdk-8u261-linux-x64.tar.gz
$ cp chinese_fonts.zip /usr/java/jdk1.8.0_261/jre/lib/fonts/
$ cd /usr/java/jdk1.8.0_261/jre/lib/fonts/
$ unzip chinese_fonts.zip
##配置java环境变量
$ vi /etc/profile
export JAVA_HOME=/usr/java/jdk1.8.0_261
export PATH=$JAVA_HOME/bin:$PATH
export CLASSPATH=$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
$ source /etc/profile
## 测试java安装是否成功
$ java -version
java version &quot;1.8.0_261&quot;
Java(TM) SE Runtime Environment (build 1.8.0_261-b12)
Java HotSpot(TM) 64-Bit Server VM (build 25.261-b12, mixed mode)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 30 Mar 2021 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2021/03/jdk_linux_chinese_fonts/</link>
        <guid isPermaLink="true">http://localhost:4000/2021/03/jdk_linux_chinese_fonts/</guid>
        
        
      </item>
    
      <item>
        <title>Arcgis安装(linux10.4版本)</title>
        <description>&lt;h3 id=&quot;arcgis安装linux104版本&quot;&gt;Arcgis安装(linux10.4版本)&lt;/h3&gt;

&lt;h4 id=&quot;配置网络&quot;&gt;配置网络&lt;/h4&gt;

&lt;p&gt;配置固定ip&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改host文件&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vim /etc/hosts

127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

192.168.8.236 arcgis.cdkttc.com dev236
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;开启防火墙&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firewall-cmd --zone=public --add-port=6080/tcp --permanent
firewall-cmd --zone=public --add-port=6443/tcp --permanent
firewall-cmd --zone=public --add-port=600-619/tcp --permanent
firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;配置arcgis用户&quot;&gt;配置arcgis用户&lt;/h4&gt;

&lt;p&gt;创建arcgis 用户组和用户,设置密码(8位以上，要有大小写区分，例如 ArcgisServer、Arcgis123)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ groupadd arcgis
$ useradd -g arcgis ags
$ passwd ags
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改用户权限&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vim /etc/security/limits.conf

ags soft nofile 65535
ags hard nofile 65535
ags soft nproc 25059
ags hard nproc 25059
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;安装arcgis-server&quot;&gt;安装arcgis server&lt;/h4&gt;

&lt;p&gt;切换到ags用户下，进入ags 文件目录操作解压并安装&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ su ags
$ cd ags
$ tar -xzf ArcGIS_for_Server_Linux_104_149446.tar
$ cd ArcGISServer
$ ./Setup -m silent -l yes -a /data/ArcGISServer10.4.1.ecp

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;错误处理&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./Setup
[ArcGIS 10.4 License Manager Setup Error]
The ArcGIS 10.4 License Manager setup requires the 32-bit glibc package. Please install this package and run this setup again.
Exiting.

## 解决办法，安装glibc32位版本
$ yum install glibc.i686
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./startserver.sh
Attempting to start ArcGIS Server... ln: failed to create symbolic link '/home/ags/arcgis/server/framework/runtime/.wine/drive_c/users/ags/Local Settings/Temporary Internet Files': No such file or directory

ERROR: Unable to start Xvfb on any port in the range 600 - 619.

## 解决办法,重新安装xvfb
$ yum -y install xorg-x11-server-Xvfb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;将-oracle-数据库注册到服务器&quot;&gt;将 Oracle 数据库注册到服务器&lt;/h3&gt;

&lt;h4 id=&quot;安装oracle客户端&quot;&gt;安装oracle客户端&lt;/h4&gt;

&lt;p&gt;下载安装包：http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html，根据实际情况下载，我下载linux版本zip版本，包括instantclient-basic-linux.x64-11.2.0.4.0.zip和instantclient-sqlplus-linux.x64-11.2.0.4.0.zip两个文件。&lt;/p&gt;

&lt;p&gt;解压缩安装到/usr/local/oracle&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ unzip instantclient-basic-linux.x64-11.2.0.4.0.zip
$ unzip instantclient-sqlplus-linux.x64-11.2.0.4.0.zip

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;配置连接&lt;/p&gt;

&lt;p&gt;在解压后的instantclient_11_2文件夹下创建配置文件&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir -p network/admin
$ cd network/admin
$ vi tnsnames.ora
history_162 =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = 10.1.197.1)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SID =xxx)
    )
  )
$ source .bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;配置环境变量&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vi ~/.bash_profile
export ORACLE_HOME=/usr/local/oracle/instantclient_11_2
export TNS_ADMIN=$ORACLE_HOME/network/admin
##export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK
export NLS_LANG=AMERICAN_AMERICA.AL32UTF8
export LD_LIBRARY_PATH=$ORACLE_HOME
export PATH=$ORACLE_HOME:$PATH

$ source ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;连接数据库&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sqlplus sw/sw123@history_162
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;错误处理&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sqlplus: error while loading shared libraries: libnsl.so.1: cannot open shared object file: No such file or directory

解决办法：
安装libnsl
$ yum install libnsl.x86_64
$ sqlplus sw/sw123@history_162

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;更改-init_user_paramsh-脚本&quot;&gt;更改 init_user_param.sh 脚本&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /home/ags/arcgis/server/usr/
$ vi init_user_param.sh
##如果采用Oracle并且安装本机安装的Oracle，则移除Oracle部分以 export 开头的行中的注释标记 (#)。
#
# For connection with Oracle Runtime or Administrator Client
#
#export ORACLE_BASE=&amp;lt;Oracle_Installdir&amp;gt;/app
#export ORACLE_HOME=$ORACLE_BASE/&amp;lt;Oracle_Release&amp;gt;/product/&amp;lt;Oracle_Version&amp;gt;/&amp;lt;client_Version&amp;gt;
#export ORACLE_SID=&amp;lt;set when applicable&amp;gt;
#export TNS_ADMIN=&amp;lt;set when applicable. e.g.$ORACLE_HOME/network/admin&amp;gt;
#export PATH=$ORACLE_HOME/bin:$PATH
#export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$LD_LIBRARY_PATH

##如果使用Oracle数据库即时客户端库，您只需取消注释并设置 $LD_LIBRARY_PATH
#
# For connection with Oracle Instant Client
#
export LD_LIBRARY_PATH=/usr/local/oracle/instantclient_11_2/:$LD_LIBRARY_PATH

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;重启arcgis server&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /home/ags/arcgis/server/
$ ./startserver.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;测试arcgis-server&quot;&gt;测试arcgis server&lt;/h4&gt;

&lt;p&gt;浏览器打开 http://localhost:6080/arcgis/manager&lt;/p&gt;

&lt;h4 id=&quot;关闭https服务&quot;&gt;关闭https服务&lt;/h4&gt;

&lt;p&gt;浏览器打开 http://localhost:6080/arcgis/admin/&lt;/p&gt;

&lt;p&gt;账号，密码采用manager账号密码进行登录&lt;/p&gt;

&lt;p&gt;选择，Home&lt;strong&gt;&amp;gt;&lt;/strong&gt; security &lt;strong&gt;&amp;gt;&lt;/strong&gt; config &lt;strong&gt;&amp;gt;&lt;/strong&gt; update，进入修改页面&lt;/p&gt;

&lt;p&gt;修改&lt;strong&gt;Protocol:&lt;/strong&gt;为HTTP Only，然后保存，搞定。&lt;/p&gt;

</description>
        <pubDate>Wed, 17 Mar 2021 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2021/03/arcgis_linux/</link>
        <guid isPermaLink="true">http://localhost:4000/2021/03/arcgis_linux/</guid>
        
        <category>arcgis</category>
        
        
        <category>arcgis</category>
        
      </item>
    
      <item>
        <title>VIM快捷键</title>
        <description>&lt;p&gt;VIM快捷键&lt;/p&gt;

&lt;h3 id=&quot;vim快捷键&quot;&gt;Vim快捷键&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;快捷键&lt;/th&gt;
      &lt;th&gt;功能描述&lt;/th&gt;
      &lt;th&gt;中文描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;^ Space&lt;/td&gt;
      &lt;td&gt;Basic code completion (the name of any class, method or variable)&lt;/td&gt;
      &lt;td&gt;？基本的代码补全&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;idea-vim插件-快捷键&quot;&gt;Idea Vim插件 快捷键&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;快捷键&lt;/th&gt;
      &lt;th&gt;功能描述&lt;/th&gt;
      &lt;th&gt;中文描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;^ Space&lt;/td&gt;
      &lt;td&gt;Basic code completion (the name of any class, method or variable)&lt;/td&gt;
      &lt;td&gt;？基本的代码补全&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</description>
        <pubDate>Wed, 27 Jan 2021 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2021/01/vim_keymap/</link>
        <guid isPermaLink="true">http://localhost:4000/2021/01/vim_keymap/</guid>
        
        <category>vim</category>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>MySQL安全相关配置</title>
        <description>&lt;p&gt;MySQL安全相关配置&lt;/p&gt;

&lt;h3 id=&quot;mysql设置密码复杂度&quot;&gt;MySQL设置密码复杂度&lt;/h3&gt;

&lt;p&gt;MySQL5.6.6版本之后增加了密码强度验证插件validate_password，相关参数设置的较为严格。使用了该插件会检查设置的密码是否符合当前设置的强度规则，若不满足则拒绝设置。&lt;/p&gt;

&lt;p&gt;MySQL默认没有安装这个插件，我们可以通过如下方式查看&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;SELECT * from mysql.`plugin`
# 或者
show plugin;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;安装插件&quot;&gt;安装插件&lt;/h4&gt;

&lt;p&gt;查看插件文件存放位置&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SHOW GLOBAL VARIABLES LIKE 'plugin_dir';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一般情况是在mysql安装路径下的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/plugin&lt;/code&gt;目录，完整安装版默认是带有插件文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;validate_password.dll&lt;/code&gt;的,如没有需要先将插件文件放入改目录下后再进行安装操作。&lt;/p&gt;

&lt;p&gt;安装插件&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;-- 添加
INSTALL PLUGIN validate_password SONAME 'validate_password.dll';

-- 卸载
UNINSTALL PLUGIN validate_password；
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;查看默认策略&quot;&gt;查看默认策略&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;show variables like 'validate_password%';
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;修改策略&quot;&gt;修改策略&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;-- 将策略要求置为LOW，长度要求置为1
set global validate_password_policy=0;
set global validate_password_length=1;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;各参数说明&quot;&gt;各参数说明&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;validate_password_policy：密码安全策略，默认MEDIUM策略&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;策略&lt;/th&gt;
      &lt;th&gt;检查规则&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0 or LOW&lt;/td&gt;
      &lt;td&gt;长度&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1 or MEDIUM&lt;/td&gt;
      &lt;td&gt;长度；数字，字母大小写，特殊符号；&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2 or STRONG&lt;/td&gt;
      &lt;td&gt;长度；数字，字母大小写，特殊符号；密码策略文件&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;validate_password_dictionary_file：密码策略文件，策略为STRONG才需要&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;validate_password_length：密码最少长度&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;validate_password_mixed_case_count：大小写字符长度，至少1个&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;validate_password_number_count ：数字至少1个&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;validate_password_special_char_count：特殊字符至少1个&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mysql添加审计功能&quot;&gt;MySQL添加审计功能&lt;/h3&gt;

&lt;p&gt;mysql的审计功能，主要可以记录下对数据库的所有操作，包括登录、连接、对表的增删改查等，便于责任追溯，问题查找，当然一定方面也会影响数据库效率。&lt;/p&gt;

&lt;h4 id=&quot;获取审计插件&quot;&gt;获取审计插件&lt;/h4&gt;

&lt;p&gt;获取插件并将其拷贝到到自己的mysql插件库下（位置参考上面validate_password说明），审计的插件的主要有以下三个：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;McAfee MySQL Audit Plugin&lt;/strong&gt;：&lt;a href=&quot;https://github.com/mcafee/mysql-audit/releases&quot;&gt;源码&lt;/a&gt;，&lt;a href=&quot;https://bintray.com/mcafee/mysql-audit-plugin/release/&quot;&gt;编译好的二进制文件&lt;/a&gt; 只有linux版本，不知怎么编译出windows版本。
&lt;strong&gt;Percona Audit Log Plugin&lt;/strong&gt;：&lt;a href=&quot;https://www.percona.com/doc/percona-server/5.5/management/audit_log_plugin.html&quot;&gt;地址&lt;/a&gt;：不了解
&lt;strong&gt;MariaDB Audit Plugin&lt;/strong&gt;：&lt;a href=&quot;https://downloads.mariadb.org/mariadb/+releases/&quot;&gt;下载地址&lt;/a&gt;：MariaDB版本自带审计功能插件，所有可以通过MariaDB官网下载对应版本（版本对应很重要，不然安装会失败，成功了也可能导致数据库崩溃）的安装包，从安装包中获得版本对应的.dll插件（linux系统.so插件），拷贝到到自己的mysql插件库下，安装插件，开启审计功能，配置my.ini文件。&lt;/p&gt;

&lt;h4 id=&quot;安装审计插件&quot;&gt;安装审计插件&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;-- 	安装
INSTALL PLUGIN server_audit SONAME 'server_audit.dll';
-- 卸载
UNINSTALL PLUGIN server_audit;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;查看参数配置&quot;&gt;查看参数配置&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-MYSQL&quot;&gt;show variables like '%audit%';
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;修改参数&quot;&gt;修改参数&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-MYSQL&quot;&gt;-- 备注：指定哪些操作被记录到日志文件中
set global server_audit_events='CONNECT,QUERY,TABLE,QUERY_DDL'

-- 备注：开启审计功能
set global server_audit_logging=on

-- 备注：默认存放路径，可以不写，默认到data文件下
set global server_audit_file_path =/data/mysql/auditlogs/

-- 备注：设置文件大小
set global server_audit_file_rotate_size=200000000

-- 指定日志文件的数量，如果为0日志将从不轮转
set global server_audit_file_rotations=200

-- 强制日志文件轮转
set global server_audit_file_rotate_now=ON
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;各个参数说明&quot;&gt;各个参数说明&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;server_audit_output_type：指定日志输出类型，可为SYSLOG或FILE&lt;/li&gt;
  &lt;li&gt;server_audit_logging：启动或关闭审计&lt;/li&gt;
  &lt;li&gt;server_audit_events：指定记录事件的类型，可以用逗号分隔的多个值(connect,query,table)，如果开启了查询缓存(query cache)，查询直接从查询缓存返回数据，将没有table记录&lt;/li&gt;
  &lt;li&gt;server_audit_file_path：如server_audit_output_type为FILE，使用该变量设置存储日志的文件，可以指定目录，默认存放在数据目录的server_audit.log文件中&lt;/li&gt;
  &lt;li&gt;server_audit_file_rotate_size：限制日志文件的大小&lt;/li&gt;
  &lt;li&gt;server_audit_file_rotations：指定日志文件的数量，如果为0日志将从不轮&lt;/li&gt;
  &lt;li&gt;server_audit_file_rotate_now：强制日志文件轮转&lt;/li&gt;
  &lt;li&gt;server_audit_incl_users：指定哪些用户的活动将记录，connect将不受此变量影响，该变量比server_audit_excl_users优先级高&lt;/li&gt;
  &lt;li&gt;server_audit_syslog_facility：默认为LOG_USER，指定facility&lt;/li&gt;
  &lt;li&gt;server_audit_syslog_ident：设置ident，作为每个syslog记录的一部分&lt;/li&gt;
  &lt;li&gt;server_audit_syslog_info：指定的info字符串将添加到syslog记录&lt;/li&gt;
  &lt;li&gt;server_audit_syslog_priority：定义记录日志的syslogd priority&lt;/li&gt;
  &lt;li&gt;server_audit_excl_users：该列表的用户行为将不记录，connect将不受该设置影响&lt;/li&gt;
  &lt;li&gt;server_audit_mode：标识版本，用于开发测试&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 04 Dec 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/12/mysql_safe_config/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/12/mysql_safe_config/</guid>
        
        <category>MySQL</category>
        
        
        <category>database</category>
        
      </item>
    
      <item>
        <title>APP、软件版本号的命名规范与原则</title>
        <description>&lt;p&gt;软件版本号的命名规范与原则&lt;/p&gt;

&lt;h3 id=&quot;版本号的命名规范与原则&quot;&gt;版本号的命名规范与原则&lt;/h3&gt;

&lt;p&gt;软件版本号有四部分组成：&lt;/p&gt;

&lt;主版本号.&gt;&lt;子版本号&gt;.&lt;阶段版本号&gt;.&lt;日期版本号加希腊字母版本号&gt;

* 主版本号：当功能模块有较大的变动，比如增加多个模块或者整体架构发生变化。
* 子版本号：当功能有一定的增加或变化。
* 阶段版本号：一般是 Bug 修复或是一些小的变动，要经常发布修订版，时间间隔不限，修复一个严重的bug即可发布一个修订版。
* 日期版本号：用于记录修改项目的当前日期，每天对项目的修改都需要更改日期版本号。

* 希腊字母版本号：此版本号用于标注当前版本的软件处于哪个开发阶段，当软件进入到另一个阶段时需要修改此版本号。共有5种：base、alpha、beta、RC、Release。 例如：1.1.1.161109_beta

通常，完全的版本号定义，分三项： &lt;主版本号.&gt;&lt;子版本号&gt;.&lt;阶段版本号&gt;



### 软件的版本阶段

- Alpha版：也叫α版，此版本主要是以实现软件功能为主，通常只在软件开发者内部交流，一般而言，该版本软件的Bug较多，需要继续修改；
- Beta版：此版本相对于α版已经有了很大的改进，消除了严重的错误，但还是存在着一些缺陷，需要经过多次测试来进一步消除，此版本主要的修改对像是软件的UI；
- RC版 （候选版本(Release Candidate)）：此版本已经相当成熟了，基本上不存在导致错误的BUG，与即将发行的正式版相差无几，测试人员基本通过的版本。
- Release版：此版本意味着“最终版本”、“上线版本”，在前面版本的一系列测试版之后，终归会有一个正式版本，是最终交付用户使用的一个版本。该版本有时也称为标准版。一般情况下，Release不会以单词形式出现在软件封面上，取而代之的是符号(R)；

&lt;/阶段版本号&gt;&lt;/子版本号&gt;&lt;/主版本号.&gt;&lt;/日期版本号加希腊字母版本号&gt;&lt;/阶段版本号&gt;&lt;/子版本号&gt;&lt;/主版本号.&gt;
</description>
        <pubDate>Wed, 29 Jul 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/07/software_version/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/07/software_version/</guid>
        
        
      </item>
    
      <item>
        <title>kubernetes部署安装</title>
        <description>&lt;p&gt;kubernetes部署安装&lt;/p&gt;

</description>
        <pubDate>Mon, 08 Jun 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/06/k8s-install/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/06/k8s-install/</guid>
        
        <category>kubernetes</category>
        
        
        <category>k8s</category>
        
      </item>
    
      <item>
        <title>IntelliJ插件开发</title>
        <description>&lt;p&gt;IntelliJ插件开发&lt;/p&gt;

&lt;h3 id=&quot;插件开发准备&quot;&gt;插件开发准备&lt;/h3&gt;

&lt;h4 id=&quot;gradle安装&quot;&gt;gradle安装&lt;/h4&gt;

&lt;h4 id=&quot;sdk下载&quot;&gt;sdk下载&lt;/h4&gt;

&lt;p&gt;下载地址（不同版本直接在后面的版本号），建议使用迅雷先下载：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cache-redirector.jetbrains.com/www.jetbrains.com/intellij-repository/releases/com/jetbrains/intellij/idea/ideaIC/2019.3.3/ideaIC-2019.3.3.zip&quot;&gt;ideaIC-2019.3.3.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cache-redirector.jetbrains.com/www.jetbrains.com/intellij-repository/releases/com/jetbrains/intellij/idea/ideaIC/2020.1.1/ideaIC-2020.1.1.zip&quot;&gt;ideaIC-2020.1.1.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载后安装到本地maven仓库&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;## 注意修改路径到你的真实路径&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mvn &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;:install-file &lt;span class=&quot;nt&quot;&gt;-Dfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/plugins/sdk/ideaIC-2019.3.3.zip&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DgroupId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com.jetbrains.intellij.idea &lt;span class=&quot;nt&quot;&gt;-DartifactId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ideaIC &lt;span class=&quot;nt&quot;&gt;-Dpackaging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;zip &lt;span class=&quot;nt&quot;&gt;-Dversion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2019.3.3 &lt;span class=&quot;nt&quot;&gt;-DgeneratePom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mvn &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;:install-file &lt;span class=&quot;nt&quot;&gt;-Dfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/plugins/sdk/ideaIC-2020.1.1.zip&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DgroupId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com.jetbrains.intellij.idea &lt;span class=&quot;nt&quot;&gt;-DartifactId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ideaIC &lt;span class=&quot;nt&quot;&gt;-Dpackaging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;zip &lt;span class=&quot;nt&quot;&gt;-Dversion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2020.1.1 &lt;span class=&quot;nt&quot;&gt;-DgeneratePom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Fri, 05 Jun 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/06/intellij_plugin/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/06/intellij_plugin/</guid>
        
        <category>IntelliJIDEA</category>
        
        <category>plugin</category>
        
        
      </item>
    
      <item>
        <title>Harbor安装</title>
        <description>&lt;p&gt;利用Harbor搭建docker 私有仓库&lt;/p&gt;

&lt;h3 id=&quot;下载harbor&quot;&gt;下载harbor&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/goharbor/harbor&quot;&gt;harbor github 地址&lt;/a&gt;
直接下载编译好的包&lt;a href=&quot;https://github.com/goharbor/harbor/releases&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;包括有两个包&lt;strong&gt;Harbor offline installer&lt;/strong&gt; 和 &lt;strong&gt;Harbor online installer&lt;/strong&gt;，此处下载offline版本。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Online installer :&lt;/strong&gt; 在线安装版直接从DockerHub下载Harbor镜像。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Offline installer :&lt;/strong&gt; 如果部署Harbor的主机不能联网可选择离线安装版，离线安装版包括Harbor镜像文件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;解压安装harbor&quot;&gt;解压安装harbor&lt;/h3&gt;

&lt;p&gt;解压安装包&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#使用tar命令解压到/usr/local/目录下
tar -zxvf harbor-online-installer-v1.10.2.tgz -C /usr/local/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装harbor&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /usr/local/harbor
## 编辑harbor的配置文件
$ vi harbor.yml
	#修改以下内容
	hostname = 192.168.159.134 #修改harbor的启动ip，这里需要依据系统ip设置
	port: 80 #harbor的端口,有两个端口,http协议(80)和https协议(443)
	harbor_admin_password = admin #修改harbor的admin用户的密码
	data_volume: /data/harbor	#修改harbor存储位置
	#注释掉https配置，包括端口及证书路径
	# https:
	#   port: 443
	#   certificate: /your/certificate/path
  #   private_key: /your/private/key/path
  
$ ./prepare #配置Harbor
$ ./install.sh #安装Harbor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;配置harbor&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## 设置Harbor开机启动
$ vi /lib/systemd/system/harbor.service

[Unit]
Description=Harbor
After=docker.service systemd-networkd.service systemd-resolved.service
Requires=docker.service
Documentation=http://github.com/vmware/harbor

[Service]
Type=simple
Restart=on-failure
RestartSec=5
#需要注意harbor的安装位置
ExecStart=/usr/bin/docker-compose -f  /usr/local/harbor/docker-compose.yml up
ExecStop=/usr/bin/docker-compose -f /usr/local/harbor/docker-compose.yml down	

[Install]
WantedBy=multi-user.target

$ systemctl enable harbor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;开放2375端口&lt;/p&gt;

&lt;p&gt;注意:在外网开放有安全风险，只推荐在内网对外开放&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vi /lib/systemd/system/docker.service
## 修改[Service]节点，增加 -H tcp://0.0.0.0:2375
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock

$ systemctl daemon-reload
$ systemctl restart docker
$ systemctl restart harbor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;harbor操作说明&quot;&gt;harbor操作说明&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## 关闭harbor服务
$ docker-compose down -v

## 启动Harbor服务
$ docker-compose up -d

## 重启harbor
$ docker-compose down -v &amp;amp;&amp;amp; docker-compose up -d

## 常用debug方式
## 查看docker程序的配置信息
$ docker info  
## 查看harbor相关的容器信息
$ docker-compose ps

## 注意：如果更改了harbor.yml文件，必须要重新执行install脚本,或者执行./prepare脚本，生成新的配置文件；
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;harbor测试&quot;&gt;harbor测试&lt;/h3&gt;

&lt;p&gt;修改docker配置文件，使docker支持harbor&lt;/p&gt;

&lt;p&gt;编辑客户机&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/docker/daemon.json&lt;/code&gt;文件&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vi /etc/docker/daemon.json
{ &quot;insecure-registries&quot;: [ &quot;192.168.159.134&quot; ] }

$ systemctl daemon-reload &amp;amp;&amp;amp; systemctl restart docker

$ docker login 192.168.159.134
Username: admin
Password:
Login Succeeded
$ docker pull 192.168.159.134/blade/demo:latest

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;推送报错&quot;&gt;推送报错&lt;/h3&gt;

&lt;p&gt;编辑服务器docker配置&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/docker/daemon.json&lt;/code&gt;，增加”insecure-registries”: [ “192.168.159.134:9020” ],&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;insecure-registries&quot;: [ &quot;192.168.8.246:9020&quot; ],
    &quot;registry-mirrors&quot;: [
        &quot;http://hub-mirror.c.163.com&quot;,
        &quot;https://mirror.ccs.tencentyun.com&quot;,
        &quot;https://dockerhub.azk8s.cn&quot;,
        &quot;https://docker.mirrors.ustc.edu.cn&quot;,
        &quot;https://registry.docker-cn.com&quot;
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;编辑客户机&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/docker/daemon.json&lt;/code&gt;文件，增加”insecure-registries”: [ “192.168.159.134:9020” ],&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;experimental&quot;: false,
  &quot;debug&quot;: true,
  &quot;registry-mirrors&quot;: [
    &quot;http://hub-mirror.c.163.com&quot;,
    &quot;http://registry.docker-cn.com&quot;,
    &quot;https://qpgr23bh.mirror.aliyuncs.com&quot;
  ],
  &quot;insecure-registries&quot;: [&quot;192.168.8.246:9020&quot;]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;附-virtualbox虚拟机增加磁盘空间&quot;&gt;附: VirtualBox虚拟机增加磁盘空间&lt;/h3&gt;

&lt;p&gt;之前采用默认分配了8G空间，后来发现空间不够，需增加磁盘空间，方法如下：&lt;/p&gt;

&lt;p&gt;修改磁盘大小，停掉虚拟机，在VirtualBox设置-存储中查看磁盘位置，通过VBoxManage命令修改磁盘大小&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## 增加磁盘空间到20G，resize参数单位为M，20G=20480M
$ VBoxManage modifyhd /Volumes/wd/vbox/harbor/harbor-disk1.vdi --resize 20480
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;扩容核心操作，启动虚拟机并进入，执行下面命令&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-------------------------------------------------------------------------
[root@harbor ~]# fdisk -l

磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 512 字节
I/O 大小(最小/最佳)：512 字节 / 512 字节
磁盘标签类型：dos
磁盘标识符：0x0003864b

   设备 Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048     2099199     1048576   83  Linux
/dev/sda2         2099200    16777215     7339008   8e  Linux LVM

磁盘 /dev/mapper/centos-root：6652 MB, 6652166144 字节，12992512 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 512 字节
I/O 大小(最小/最佳)：512 字节 / 512 字节


磁盘 /dev/mapper/centos-swap：859 MB, 859832320 字节，1679360 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 512 字节
I/O 大小(最小/最佳)：512 字节 / 512 字节

-------------------------------------------------------------------------
[root@harbor ~]# fdisk /dev/sda
欢迎使用 fdisk (util-linux 2.23.2)。

更改将停留在内存中，直到您决定将更改写入磁盘。
使用写入命令前请三思。

命令(输入 m 获取帮助)：m
命令操作
   a   toggle a bootable flag
   b   edit bsd disklabel
   c   toggle the dos compatibility flag
   d   delete a partition
   g   create a new empty GPT partition table
   G   create an IRIX (SGI) partition table
   l   list known partition types
   m   print this menu
   n   add a new partition
   o   create a new empty DOS partition table
   p   print the partition table
   q   quit without saving changes
   s   create a new empty Sun disklabel
   t   change a partition's system id
   u   change display/entry units
   v   verify the partition table
   w   write table to disk and exit
   x   extra functionality (experts only)

命令(输入 m 获取帮助)：n
Partition type:
   p   primary (2 primary, 0 extended, 2 free)
   e   extended
Select (default p): p
分区号 (3,4，默认 3)：3
起始 扇区 (16777216-41943039，默认为 16777216)：
将使用默认值 16777216
Last 扇区, +扇区 or +size{K,M,G} (16777216-41943039，默认为 41943039)：
将使用默认值 41943039
分区 3 已设置为 Linux 类型，大小设为 12 GiB

命令(输入 m 获取帮助)：t
分区号 (1-3，默认 3)：3
Hex 代码(输入 L 列出所有代码)：l

 0  空              24  NEC DOS         81  Minix / 旧 Linu bf  Solaris
 1  FAT12           27  隐藏的 NTFS Win 82  Linux 交换 / So c1  DRDOS/sec (FAT-
 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS/sec (FAT-
 3  XENIX usr       3c  PartitionMagic  84  OS/2 隐藏的 C:  c6  DRDOS/sec (FAT-
 4  FAT16 &amp;lt;32M      40  Venix 80286     85  Linux 扩展      c7  Syrinx
 5  扩展            41  PPC PReP Boot   86  NTFS 卷集       da  非文件系统数据
 6  FAT16           42  SFS             87  NTFS 卷集       db  CP/M / CTOS / .
 7  HPFS/NTFS/exFAT 4d  QNX4.x          88  Linux 纯文本    de  Dell 工具
 8  AIX             4e  QNX4.x 第2部分  8e  Linux LVM       df  BootIt
 9  AIX 可启动      4f  QNX4.x 第3部分  93  Amoeba          e1  DOS 访问
 a  OS/2 启动管理器 50  OnTrack DM      94  Amoeba BBT      e3  DOS R/O
 b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD/OS          e4  SpeedStor
 c  W95 FAT32 (LBA) 52  CP/M            a0  IBM Thinkpad 休 eb  BeOS fs
 e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         ee  GPT
 f  W95 扩展 (LBA)  54  OnTrackDM6      a6  OpenBSD         ef  EFI (FAT-12/16/
10  OPUS            55  EZ-Drive        a7  NeXTSTEP        f0  Linux/PA-RISC
11  隐藏的 FAT12    56  Golden Bow      a8  Darwin UFS      f1  SpeedStor
12  Compaq 诊断     5c  Priam Edisk     a9  NetBSD          f4  SpeedStor
14  隐藏的 FAT16 &amp;lt;3 61  SpeedStor       ab  Darwin 启动     f2  DOS 次要
16  隐藏的 FAT16    63  GNU HURD or Sys af  HFS / HFS+      fb  VMware VMFS
17  隐藏的 HPFS/NTF 64  Novell Netware  b7  BSDI fs         fc  VMware VMKCORE
18  AST 智能睡眠    65  Novell Netware  b8  BSDI swap       fd  Linux raid 自动
1b  隐藏的 W95 FAT3 70  DiskSecure 多启 bb  Boot Wizard 隐  fe  LANstep
1c  隐藏的 W95 FAT3 75  PC/IX           be  Solaris 启动    ff  BBT
1e  隐藏的 W95 FAT1 80  旧 Minix
Hex 代码(输入 L 列出所有代码)：8e
已将分区“Linux”的类型更改为“Linux LVM”

命令(输入 m 获取帮助)：w
The partition table has been altered!

Calling ioctl() to re-read partition table.

WARNING: Re-reading the partition table failed with error 16: 设备或资源忙.
The kernel still uses the old table. The new table will be used at
the next reboot or after you run partprobe(8) or kpartx(8)
正在同步磁盘。

## 重启后执行sudo fdisk -l查看设备Boot（我的为 /dev/sda3 ）
-------------------------------------------------------------------------
[root@harbor ~]# reboot
[root@harbor ~]# fdisk -l

磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 512 字节
I/O 大小(最小/最佳)：512 字节 / 512 字节
磁盘标签类型：dos
磁盘标识符：0x0003864b

   设备 Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048     2099199     1048576   83  Linux
/dev/sda2         2099200    16777215     7339008   8e  Linux LVM
/dev/sda3        16777216    41943039    12582912   8e  Linux LVM

磁盘 /dev/mapper/centos-root：6652 MB, 6652166144 字节，12992512 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 512 字节
I/O 大小(最小/最佳)：512 字节 / 512 字节


磁盘 /dev/mapper/centos-swap：859 MB, 859832320 字节，1679360 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 512 字节
I/O 大小(最小/最佳)：512 字节 / 512 字节

## 将分区格式化为ext4格式
-------------------------------------------------------------------------
[root@harbor ~]# mkfs.ext4 /dev/sda3
mke2fs 1.42.9 (28-Dec-2013)
文件系统标签=
OS type: Linux
块大小=4096 (log=2)
分块大小=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
786432 inodes, 3145728 blocks
157286 blocks (5.00%) reserved for the super user
第一个数据块=0
Maximum filesystem blocks=2151677952
96 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks:
	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208

Allocating group tables: 完成
正在写入inode表: 完成
Creating journal (32768 blocks): 完成
Writing superblocks and filesystem accounting information: 完成

## 创建新的物理分区
-------------------------------------------------------------------------
[root@harbor ~]# sudo pvcreate /dev/sda3
WARNING: ext4 signature detected on /dev/sda3 at offset 1080. Wipe it? [y/n]: y
  Wiping ext4 signature on /dev/sda3.
  Physical volume &quot;/dev/sda3&quot; successfully created.
[root@harbor ~]# sudo vgextend centos /dev/sda3
  Volume group &quot;centos&quot; successfully extended


查看LVM信息
1.pvdisplay 查看物理卷
2.vgdisplay 查看虚拟卷
3.lvdisplay 查看逻辑卷
-------------------------------------------------------------------------
[root@harbor ~]# pvdisplay
  --- Physical volume ---
  PV Name               /dev/sda2
  VG Name               centos
  PV Size               &amp;lt;7.00 GiB / not usable 3.00 MiB
  Allocatable           yes (but full)
  PE Size               4.00 MiB
  Total PE              1791
  Free PE               0
  Allocated PE          1791
  PV UUID               jhAzWm-Cbsk-UjUg-328S-Ckk4-IHyQ-e2AnR8

  --- Physical volume ---
  PV Name               /dev/sda3
  VG Name               centos
  PV Size               12.00 GiB / not usable 4.00 MiB
  Allocatable           yes
  PE Size               4.00 MiB
  Total PE              3071
  Free PE               3071
  Allocated PE          0
  PV UUID               DqL9Bo-HC7B-HMde-cG9o-eAXy-MSQ5-fedoxS

查看LVM信息
2.vgdisplay 查看虚拟卷
-------------------------------------------------------------------------
[root@harbor ~]# vgdisplay
  --- Volume group ---
  VG Name               centos
  System ID
  Format                lvm2
  Metadata Areas        2
  Metadata Sequence No  4
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                2
  Open LV               2
  Max PV                0
  Cur PV                2
  Act PV                2
  VG Size               18.99 GiB
  PE Size               4.00 MiB
  Total PE              4862
  Alloc PE / Size       1791 / &amp;lt;7.00 GiB
  Free  PE / Size       3071 / &amp;lt;12.00 GiB
  VG UUID               Cn32hR-TEcI-Z5zC-Rmrf-cIwI-fUwW-QymcyG

## 扩展到卷 组（centos便是下图中的VG Name）
-------------------------------------------------------------------------
[root@harbor ~]# vgextend centos /dev/sda3
信息缺失。。。

查看LVM信息
3.lvdisplay 查看逻辑卷，根据大小判定/dev/centos/root即是根分区
-------------------------------------------------------------------------
[root@harbor ~]# lvdisplay
  --- Logical volume ---
  LV Path                /dev/centos/swap
  LV Name                swap
  VG Name                centos
  LV UUID                hNLuJD-KQZI-QziE-dXSg-orES-qVqj-gRyX4X
  LV Write Access        read/write
  LV Creation host, time db-mysql, 2020-06-02 16:12:47 +0800
  LV Status              available
  # open                 2
  LV Size                820.00 MiB
  Current LE             205
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     8192
  Block device           253:1

  --- Logical volume ---
  LV Path                /dev/centos/root
  LV Name                root
  VG Name                centos
  LV UUID                kE4nqp-3z3Q-JhDB-fBcK-FnYZ-WiFc-fLef6w
  LV Write Access        read/write
  LV Creation host, time db-mysql, 2020-06-02 16:12:48 +0800
  LV Status              available
  # open                 1
  LV Size                &amp;lt;6.20 GiB
  Current LE             1586
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     8192
  Block device           253:0
  
-------------------------------------------------------------------------
[root@harbor ~]# lvextend /dev/centos/root /dev/sda3
  Size of logical volume centos/root changed from &amp;lt;6.20 GiB (1586 extents) to 18.19 GiB (4657 extents).
  Logical volume centos/root successfully resized.
[root@harbor ~]# sudo resize2fs /dev/centos/root
resize2fs 1.42.9 (28-Dec-2013)
resize2fs: Bad magic number in super-block 当尝试打开 /dev/centos/root 时
找不到有效的文件系统超级块.


## 刷新逻辑分区容量
##如果报错则是因为你的某些分区使用的是xfs的文件系统，执行 xfs_growfs /dev/centos/root 刷新逻辑分区即可
-------------------------------------------------------------------------
[root@harbor ~]# resize2fs /dev/centos/root

## 刷新逻辑分区
-------------------------------------------------------------------------
[root@harbor ~]# xfs_growfs /dev/centos/root
meta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=406016 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=0 spinodes=0
data     =                       bsize=4096   blocks=1624064, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal               bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
data blocks changed from 1624064 to 4768768

## 这时执行sudo df -h //会发现根分区容量变大了，恭喜你成功了
-------------------------------------------------------------------------
[root@harbor ~]# df -h
文件系统                 容量  已用  可用 已用% 挂载点
devtmpfs                 485M     0  485M    0% /dev
tmpfs                    496M     0  496M    0% /dev/shm
tmpfs                    496M  6.8M  489M    2% /run
tmpfs                    496M     0  496M    0% /sys/fs/cgroup
/dev/mapper/centos-root   19G  4.8G   14G   26% /
/dev/sda1               1014M  168M  847M   17% /boot
tmpfs                    100M     0  100M    0% /run/user/0

## 最后reboot重启一下便可以啦！
-------------------------------------------------------------------------
[root@harbor ~]# reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 03 Jun 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/06/harbor_install/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/06/harbor_install/</guid>
        
        <category>docker</category>
        
        <category>harbor</category>
        
        
      </item>
    
      <item>
        <title>CAS单点登录-客户端搭建</title>
        <description>&lt;p&gt;CAS单点登录-客户端搭建&lt;/p&gt;
</description>
        <pubDate>Wed, 06 May 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/05/cas_03_client/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/05/cas_03_client/</guid>
        
        <category>cas</category>
        
        <category>单点登录</category>
        
        <category>SSO</category>
        
        
        <category>cas</category>
        
      </item>
    
  </channel>
</rss>
