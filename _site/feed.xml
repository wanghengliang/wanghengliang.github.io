<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hengliang</title>
    <description>快乐地创造和品味生活</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 02 Nov 2018 14:44:54 +0800</pubDate>
    <lastBuildDate>Fri, 02 Nov 2018 14:44:54 +0800</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>JAVA异常处理</title>
        <description>&lt;p&gt;JAVA异常处理&lt;/p&gt;

&lt;p&gt;要理解Java异常处理是如何工作的，你需要掌握以下三种类型的异常：&lt;/p&gt;

&lt;p&gt;检查性异常: 最具代表的检查性异常是用户错误或问题引起的异常，这是程序员无法预见的。例如要打开一个不存在文件时，一个异常就发生了，这些异常在编译时不能被简单地忽略。&lt;/p&gt;

&lt;p&gt;运行时异常: 运行时异常是可能被程序员避免的异常。与检查性异常相反，运行时异常可以在编译时被忽略。&lt;/p&gt;

&lt;p&gt;错误: 错误不是异常，而是脱离程序员控制的问题。错误在代码中通常被忽略。例如，当栈溢出时，一个错误就发生了，它们在编译也检查不到的。&lt;/p&gt;

&lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.runoob.com/java/java-exceptions.html&quot;&gt;Java 异常处理&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Nov 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/11/java_exception/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/11/java_exception/</guid>
        
        <category>JAVA</category>
        
        <category>异常</category>
        
        
        <category>技术开发</category>
        
      </item>
    
      <item>
        <title>jekyll整合MathjaxJS插入数学公式</title>
        <description>&lt;p&gt;jekyll整合MathjaxJS插入数学公式&lt;/p&gt;

&lt;h3 id=&quot;mathjax简介&quot;&gt;MathJax简介&lt;/h3&gt;

&lt;p&gt;MathJax是一款运行在浏览器中的开源的数学符号渲染引擎，使用MathJax可以方便的在浏览器中显示数学公式，不需要使用图片。目前，MathJax可以解析Latex、MathML和ASCIIMathML的标记语言。(Wiki)&lt;/p&gt;

&lt;p&gt;先给几个效果看看&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x^{y^z}=(1+{\rm e}^x)^{-2xy^w}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sideset{^1_2}{^3_4}\bigotimes&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f\left(
   \left[ 
     \frac{
       1+\left\{x,y\right\}
     }{
       \left(
          \frac{x}{y}+\frac{y}{x}
       \right)
       \left(u+1\right)
     }+\sqrt{a} \quad
   \right]^{3/2}
\right)&lt;/script&gt;

&lt;h3 id=&quot;引入mathjax&quot;&gt;引入MathJax&lt;/h3&gt;

&lt;p&gt;在页脚处，引入官方的cdn,但这个js还是会调用到 cdn.mathjax.org 里的一些配置js文件，我们最好在head内加一个dns-prefetch，用于网页加速&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//head中引入
&amp;lt;link rel=&quot;dns-prefetch&quot; href=&quot;//cdn.mathjax.org&quot; /&amp;gt;

//页脚处引入
&amp;lt;script src=&quot;//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;官方cdn的js在国内访问慢，所以我们一般引入的是国内的公共资源cdn提供的js&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//head中引入
&amp;lt;link rel=&quot;dns-prefetch&quot; href=&quot;//cdn.bootcss.com&quot; /&amp;gt;

//页脚处引入
&amp;lt;script src=&quot;//cdn.bootcss.com/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;jekyll中找到自己的模板中相应位置添加以上代码即可。&lt;/p&gt;

&lt;h3 id=&quot;mathjax的config说明&quot;&gt;MathJax的config说明&lt;/h3&gt;

&lt;p&gt;其config包括外联config和内联config。&lt;/p&gt;

&lt;h4 id=&quot;外联config说明&quot;&gt;外联config说明&lt;/h4&gt;

&lt;p&gt;我们引入MathJax，发现链接后面多了个?config=TeX-AMS-MML_HTMLorMML这个多出来的东西其实是告诉MathJax，我们要用到的叫TeX-AMS-MML_HTMLorMML.js的配置文件，其用来控制显示数学公式的HTMl显示输出。&lt;/p&gt;

&lt;h4 id=&quot;内联config说明&quot;&gt;内联config说明&lt;/h4&gt;

&lt;p&gt;与此同时，官方其实还提供了一个能让我们内联一个配置选项的功能，很简单就是使用&lt;script&gt;&lt;/script&gt;标签对，但注意的是需要声明类型type=”text/x-mathjax-config”。要想让这个内联配置生效就得放在MathJax.js之前，例子如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script type=&quot;text/x-mathjax-config&quot;&amp;gt;
MathJax.Hub.Config({
});
&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;//cdn.bootcss.com/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其中MathJax.Hub.Config()里的配置选项很多，可以查看官网说明，这里不详细说明，只给出我用的，并给出一些说明&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script type=&quot;text/x-mathjax-config&quot;&amp;gt;
var mathId = document.getElementById(&quot;post-container&quot;);//选择公式识别范围
MathJax.Hub.Config({
    showProcessingMessages: false,//关闭js加载过程信息
    messageStyle: &quot;none&quot;,//不显示信息
    extensions: [&quot;tex2jax.js&quot;],
    jax: [&quot;input/TeX&quot;, &quot;output/HTML-CSS&quot;],
    tex2jax: {
        inlineMath:  [ [&quot;$&quot;, &quot;$&quot;] ],//行内公式选择符
        displayMath: [ [&quot;$$&quot;,&quot;$$&quot;] ],//段内公式选择符
        skipTags: ['script', 'noscript', 'style', 'textarea', 'pre','code','a'],//避开某些标签
        ignoreClass:&quot;comment-content&quot; //避开含该Class的标签
    },
    &quot;HTML-CSS&quot;: {
        availableFonts: [&quot;STIX&quot;,&quot;TeX&quot;],//可选字体
        showMathMenu: false //关闭右击菜单显示
    }
});
MathJax.Hub.Queue([&quot;Typeset&quot;,MathJax.Hub,mathId]);//选择公式识别范围
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;数学公式识别&quot;&gt;数学公式识别&lt;/h4&gt;
&lt;p&gt;通过tex2jax中的inlineMath和displayMath进行数学公式识别，&lt;/p&gt;

&lt;p&gt;其中inlineMath识别的单行内的数学公式,我们可以通过$ … $或\( … \)去识别这种数学公式，&lt;/p&gt;

&lt;p&gt;displayMath就是识别整个独立段落的数学公式并且居中显示,我们可以通过&lt;script type=&quot;math/tex&quot;&gt;...&lt;/script&gt;或\[ … \]去识别这种数学公式&lt;/p&gt;

&lt;h4 id=&quot;约束识别范围&quot;&gt;约束识别范围&lt;/h4&gt;
&lt;p&gt;默认情况下,MathJax.Hub.Queue([“Typeset”,MathJax.Hub])是对整个DOM树进行识别的，我们要约束识别范围，官方文档告诉我们MathJax.Hub.Queue的第三个参数就是识别范围，上面的代码就是告诉我们要在id为post-container的标签内去做公式识别&lt;/p&gt;

&lt;h4 id=&quot;避开特殊标签和class&quot;&gt;避开特殊标签和Class&lt;/h4&gt;
&lt;p&gt;其中skipTags用来避开一些特殊的标签内的内容，这里避开是script,noscript,style,textarea,pre,code,a标签&lt;/p&gt;

&lt;p&gt;ignoreClass用来避开标签内声明的CSS Class属性，这里避开的是带有class=”comment-content”的标签，如果我们不想让mathjax识别评论里的公式就可以用ignoreClass，如果有多个Class需要避开，我们可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt; 来区分，写成&lt;code class=&quot;highlighter-rouge&quot;&gt;ignoreClass: &quot;class1|class2&quot;&lt;/code&gt;就可以了&lt;/p&gt;

&lt;h3 id=&quot;公式使用&quot;&gt;公式使用&lt;/h3&gt;

&lt;h4 id=&quot;1-如果插入公式&quot;&gt;1. 如果插入公式&lt;/h4&gt;

&lt;h4 id=&quot;2-如何输入上下标&quot;&gt;2. 如何输入上下标&lt;/h4&gt;

&lt;h4 id=&quot;3-如何输入括号和分隔符&quot;&gt;3. 如何输入括号和分隔符&lt;/h4&gt;

&lt;h4 id=&quot;4-如何输入分数&quot;&gt;4. 如何输入分数&lt;/h4&gt;

&lt;h4 id=&quot;5-如何输入开方&quot;&gt;5. 如何输入开方&lt;/h4&gt;

&lt;h4 id=&quot;6-如何输入省略号&quot;&gt;6. 如何输入省略号&lt;/h4&gt;

&lt;h4 id=&quot;7-如何输入矢量&quot;&gt;7. 如何输入矢量&lt;/h4&gt;

&lt;h4 id=&quot;8-如何输入积分&quot;&gt;8. 如何输入积分&lt;/h4&gt;

&lt;h4 id=&quot;9如何输入极限运算&quot;&gt;9.如何输入极限运算&lt;/h4&gt;

&lt;h4 id=&quot;10如何输入累加累乘运算&quot;&gt;10.如何输入累加、累乘运算&lt;/h4&gt;

&lt;h4 id=&quot;11如何输入希腊字母&quot;&gt;11.如何输入希腊字母&lt;/h4&gt;

&lt;h4 id=&quot;12大括号和行标的使用&quot;&gt;12.大括号和行标的使用&lt;/h4&gt;

&lt;h3 id=&quot;参考内容&quot;&gt;参考内容&lt;/h3&gt;
&lt;p&gt;本文内容参考一下网页内容&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.linpx.com/p/front-end-integration-mathjaxjs-configuration.html&quot;&gt;前端整合MathjaxJS的配置笔记&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/q735613050/p/7253073.html&quot;&gt;Markdown公式编辑学习笔记&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/q735613050/p/7474449.html&quot;&gt;Markdown公式（二）&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 31 Oct 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/10/MathjaxJS/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/10/MathjaxJS/</guid>
        
        <category>jekyll</category>
        
        <category>mathjaxJs</category>
        
        
        <category>技术开发</category>
        
      </item>
    
      <item>
        <title>java位运算</title>
        <description>&lt;p&gt;java位运算&lt;/p&gt;

&lt;p&gt;位运算表达式由操作数和位运算符组成，实现对整数类型的二进制数进行位运算。位运算符可以分为逻辑运算符(包括&lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;＆&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;)及移位运算符(包括&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;)。&lt;/p&gt;

&lt;h3 id=&quot;二进制表示&quot;&gt;二进制表示&lt;/h3&gt;

&lt;p&gt;二进制第一位为符号位，0表示正数，1表示负数。&lt;/p&gt;

&lt;h4 id=&quot;1正数表示例如int类型值-5int用32位表示&quot;&gt;1.正数表示,例如:int类型值 &lt;code class=&quot;highlighter-rouge&quot;&gt;5&lt;/code&gt;(int用32位表示)&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5 = 0000 0000 0000 0000 0000 0000 0000 0101
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;2负数表示例如int类型值--5&quot;&gt;2.负数表示,例如:int类型值 &lt;code class=&quot;highlighter-rouge&quot;&gt;-5&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;首先来个正数5&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5 = 0000 0000 0000 0000 0000 0000 0000 0101
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;这个就是&lt;code class=&quot;highlighter-rouge&quot;&gt;原码&lt;/code&gt;，然后&lt;code class=&quot;highlighter-rouge&quot;&gt;原码&lt;/code&gt;取反（0的变成1，1的变成0），得到&lt;code class=&quot;highlighter-rouge&quot;&gt;反码&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;原码: 0000 0000 0000 0000 0000 0000 0000 0101
反码: 1111 1111 1111 1111 1111 1111 1111 1010
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;反码&lt;/code&gt;进行加1得到&lt;code class=&quot;highlighter-rouge&quot;&gt;补码&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;原码: 0000 0000 0000 0000 0000 0000 0000 0101
反码: 1111 1111 1111 1111 1111 1111 1111 1010
补码: 1111 1111 1111 1111 1111 1111 1111 1011
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;最终得到的&lt;code class=&quot;highlighter-rouge&quot;&gt;补码&lt;/code&gt;就是负数在计算机中的二进制表示方法&lt;/p&gt;

&lt;h4 id=&quot;3二进制转换为十进制&quot;&gt;3.二进制转换为十进制&lt;/h4&gt;

&lt;p&gt;正数不讲,略…, 这里只说负数，先随便来一个负数二进制&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;负数二进制: 1111 1111 1111 1111 1111 1111 1111 1011
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;负数二进制，减1&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;负数二进制: 1111 1111 1111 1111 1111 1111 1111 1011
二进制减一: 1111 1111 1111 1111 1111 1111 1111 1010
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;取反&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;负数二进制: 1111 1111 1111 1111 1111 1111 1111 1011
二进制减一: 1111 1111 1111 1111 1111 1111 1111 1010
减一后取反: 0000 0000 0000 0000 0000 0000 0000 0101
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;然后计算得到结果为5，那么负数二进制就为-5&lt;/p&gt;

&lt;h3 id=&quot;逻辑运算符&quot;&gt;逻辑运算符&lt;/h3&gt;

&lt;h4 id=&quot;1非运算--取反&quot;&gt;1.非(&lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;)运算	: 取反&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;System.out.println(~5);// 结果为-6 

5  = 0000 0000 0000 0000 0000 0000 0000 0101 = 5
~5 = 1111 1111 1111 1111 1111 1111 1111 1010 = -6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;2与-运算--有0出0全1出1&quot;&gt;2.与 (&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;)运算	: 有0出0;全1出1&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;System.out.println(5 &amp;amp; 3);// 结果为1

5     = 0000 0000 0000 0000 0000 0000 0000 0101 = 5
3     = 0000 0000 0000 0000 0000 0000 0000 0011 = 3
5 &amp;amp; 3 = 0000 0000 0000 0000 0000 0000 0000 0001 = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;应用&lt;/p&gt;

&lt;p&gt;一个数字标识位，表示多种逻辑,例如：一个任务可分成n个独立小任务，每个小任务之间不分先后顺序，当所有小任务完成则表示此任务完成。&lt;/p&gt;

&lt;p&gt;如果n=3，则将3个小任务分别用$2^0$,$2^1$,$2^2$即1,2,4表示&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//更新当前任务完成第1个小任务
update tbl_task set status = status|1 where id=1;
//同理，更新当前任务完成第2个小任务
update tbl_task set status = status|2 where id=1;
//同理，更新当前任务完成第3个小任务
update tbl_task set status = status|4 where id=1;
//当status = 7时，则表示三个任务都完成;

//查询第1个小任务未完成的所有任务
select * from tbl_task where status&amp;amp;1=0;
//查询第1个小任务已完成的所有任务
select * from tbl_task where status&amp;amp;1=1;

//同理，第2个小任务
//查询第2个小任务未完成的所有任务
select * from tbl_task where status&amp;amp;2=0;
//查询第2个小任务已完成的所有任务
select * from tbl_task where status&amp;amp;2=2;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;3或运算--有1出1全0出0&quot;&gt;3.或(&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;)运算	: 有1出1;全0出0&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;System.out.println(5 | 3);// 结果为7

5     = 0000 0000 0000 0000 0000 0000 0000 0101 = 5
3     = 0000 0000 0000 0000 0000 0000 0000 0011 = 3
5 | 3 = 0000 0000 0000 0000 0000 0000 0000 0111 = 7
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;4异或运算-相同得0相异得1&quot;&gt;4.异或(&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;)运算: 相同得0;相异得1&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;System.out.println(5 ^ 3);//结果为6 

5     = 0000 0000 0000 0000 0000 0000 0000 0101 = 5
3     = 0000 0000 0000 0000 0000 0000 0000 0011 = 3
5 ^ 3 = 0000 0000 0000 0000 0000 0000 0000 0110 = 6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;移位运算符&quot;&gt;移位运算符&lt;/h3&gt;

&lt;h4 id=&quot;1左移位运算符能将运算符左边的运算对象向左移动运算符右侧指定的位数在低位补0&quot;&gt;1.左移位运算符（&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;&lt;/code&gt;）能将运算符左边的运算对象向左移动运算符右侧指定的位数（在低位补0）。&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;System.out.println(5 &amp;lt;&amp;lt; 3);// 运行结果是40

5      = 0000 0000 0000 0000 0000 0000 0000 0101 = 5
5 &amp;lt;&amp;lt; 3 = 0000 0000 0000 0000 0000 0000 0010 1000 = 40
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;2有符号右移位运算符则将运算符左边的运算对象向右移动运算符右侧指定的位数-有符号右移位运算符使用了符号扩展若值为正则在高位插入0若值为负则在高位插入1&quot;&gt;2.“有符号”右移位运算符（&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;）则将运算符左边的运算对象向右移动运算符右侧指定的位数。 “有符号”右移位运算符使用了“符号扩展”：若值为正，则在高位插入0；若值为负，则在高位插入1。&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;System.out.println(5 &amp;gt;&amp;gt; 3);// 运行结果是0

5      = 0000 0000 0000 0000 0000 0000 0000 0101 = 5
5 &amp;gt;&amp;gt; 3 = 0000 0000 0000 0000 0000 0000 0000 0000 = 0

System.out.println(-5 &amp;gt;&amp;gt; 3);// 结果是-1

-5      = 1111 1111 1111 1111 1111 1111 1111 1011 = -5
-5 &amp;gt;&amp;gt; 3 = 1111 1111 1111 1111 1111 1111 1111 1111 = -1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;3java也添加了一种无符号右移位运算符它使用了零扩展无论正负都在高位插入0这一运算符是c或c没有的&quot;&gt;3.Java也添加了一种“无符号”右移位运算符（&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;），它使用了“零扩展”：无论正负，都在高位插入0。这一运算符是C或C++没有的。&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;System.out.println(5 &amp;gt;&amp;gt;&amp;gt; 3);// 结果是0

5       = 0000 0000 0000 0000 0000 0000 0000 0101 = 5
5 &amp;gt;&amp;gt;&amp;gt; 3 = 0000 0000 0000 0000 0000 0000 0000 0000 = 0

System.out.println(-5 &amp;gt;&amp;gt;&amp;gt; 3);// 结果是536870911

-5       = 1111 1111 1111 1111 1111 1111 1111 1011 = -5
-5 &amp;gt;&amp;gt;&amp;gt; 3 = 0001 1111 1111 1111 1111 1111 1111 1111 = 536870911
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Tue, 30 Oct 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/10/java_bit_operation/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/10/java_bit_operation/</guid>
        
        <category>JAVA</category>
        
        
        <category>技术开发</category>
        
      </item>
    
      <item>
        <title>Linux使用技巧</title>
        <description>&lt;p&gt;Linux使用技巧&lt;/p&gt;

&lt;h3 id=&quot;单用户登录模式&quot;&gt;单用户登录模式&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;重启服务器，在选择内核界面使用上下箭头移动&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择内核并按“e”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;找到下面这行
&lt;img src=&quot;/images/posts/linux/skill_01_01.png&quot; alt=&quot;&quot; /&gt;
这里要删除掉rhgb quiet，如下图
&lt;img src=&quot;/images/posts/linux/skill_01_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用“ctrl + x” 来重启服务器就可以了，重启后就会进入到单用户&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;退出单用户命令  exec /sbin/init&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;同步时间&quot;&gt;同步时间&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;安装ntp服务&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum install ntp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.加入crontab&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi /etc/crontab

## 加入如下内容
* */1 * * * root ntpdate 0.asia.pool.ntp.org
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sat, 13 Oct 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/10/linux_skill/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/10/linux_skill/</guid>
        
        <category>linux</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>jmeter压力测试</title>
        <description>&lt;p&gt;jmeter压力测试&lt;/p&gt;

&lt;h3 id=&quot;下载及安装&quot;&gt;下载及安装&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;登录官网Jmeter下载，得到压缩包apache-jmeter-5.0.tgz，下载地址：http://jmeter.apache.org/download_jmeter.cgi&lt;/li&gt;
  &lt;li&gt;将下载得到的压缩包apache-jmeter-5.0.tgz解压即可。
&lt;img src=&quot;/images/posts/tools/jmeter01.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;运行&quot;&gt;运行&lt;/h3&gt;

&lt;p&gt;执行bin/jmeter.bat或者bin/jmeter.sh运行，效果图如下
&lt;img src=&quot;/images/posts/tools/jmeter02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;一个简单的压测实例&quot;&gt;一个简单的压测实例&lt;/h3&gt;

&lt;h4 id=&quot;新建一个线程组&quot;&gt;新建一个线程组&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tools/jmeter03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;设置线程组参数&quot;&gt;设置线程组参数&lt;/h4&gt;
&lt;p&gt;这里配置为：10个线程，同时启动，循环一次。这些配置元件用于指定运行的线程数和等候周期。每个线程模拟一个用户，而等候周期用于指定创建全部线程的时间。例如，线程数为5，等候时间为10秒，则创建每个线程之间的时间间隔为2秒。循环数定义了线程的运行时间。使用调度器，还可以设置运行的起始时间。
&lt;img src=&quot;/images/posts/tools/jmeter04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;新增http请求默认值&quot;&gt;新增http请求默认值&lt;/h4&gt;
&lt;p&gt;在上一步创建的线程组上，新增http请求默认值，所有的请求都会使用设置的默认值，这设置协议为http，IP为127.0.0.1，端口为8080
&lt;img src=&quot;/images/posts/tools/jmeter05.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/posts/tools/jmeter06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;添加要压测的http请求&quot;&gt;添加要压测的http请求&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tools/jmeter07.png&quot; alt=&quot;&quot; /&gt;
下图第一个红框内的协议、IP、端口不需要设置，会使用步骤c中设置的默认值，只需设置请求路径Path即可，这里填入/index.html
&lt;img src=&quot;/images/posts/tools/jmeter08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;新增监听器用于查看压测结果&quot;&gt;新增监听器，用于查看压测结果&lt;/h4&gt;
&lt;p&gt;这里添加三种：聚合报告、图形结果、用表格查看结果，区别在于结果展现形式不同。
&lt;img src=&quot;/images/posts/tools/jmeter09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;点击运行按钮开始压测并查看结果&quot;&gt;点击运行按钮开始压测，并查看结果&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tools/jmeter10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;jmeter结果分析&quot;&gt;jmeter结果分析&lt;/h3&gt;
&lt;p&gt;采用Jmeter测试工具对web系统作的负载测试，得出的响应报表，数据比较难懂，现作一具体说明。&lt;/p&gt;

&lt;h4 id=&quot;图形报表&quot;&gt;图形报表&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tools/jmeter11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图表底部参数的含义如下：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;样本数目是总共发送到服务器的请求数。&lt;/li&gt;
  &lt;li&gt;最新样本是代表时间的数字,是服务器响应最后一个请求的时间。&lt;/li&gt;
  &lt;li&gt;吞吐量是服务器每分钟处理的请求数。&lt;/li&gt;
  &lt;li&gt;平均值是总运行时间除以发送到服务器的请求数。&lt;/li&gt;
  &lt;li&gt;中间值是代表时间的数字，有一半的服务器响应时间低于该值而另一半高于该值。&lt;/li&gt;
  &lt;li&gt;偏离表示服务器响应时间变化、离散程度测量值的大小，或者，换句话说，就是数据的分布。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;聚合报告&quot;&gt;聚合报告&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tools/jmeter12.png&quot; alt=&quot;&quot; /&gt;
图表含义说明如下：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Label: 说明是请求类型，如Http，FTP等请求。&lt;/li&gt;
  &lt;li&gt;#Samples: 也就是图形报表中的样本数目，总共发送到服务器的样本数目。&lt;/li&gt;
  &lt;li&gt;Average: 也就是图形报表中的平均值，是总运行时间除以发送到服务器的请求数。&lt;/li&gt;
  &lt;li&gt;Median: 也就是图形报表中的中间值，是代表时间的数字，有一半的服务器响应时间低于该值而另一半高于该值。&lt;/li&gt;
  &lt;li&gt;90%line: 是指90%请求的响应时间比所得数值还要小。&lt;/li&gt;
  &lt;li&gt;Min:是代表时间的数字,是服务器响应的最短时间。&lt;/li&gt;
  &lt;li&gt;Max: 是代表时间的数字,是服务器响应的最长时间。&lt;/li&gt;
  &lt;li&gt;Error%: 请求的错误百分比。&lt;/li&gt;
  &lt;li&gt;Throughput: 也就是图形报表中的吞吐量，这里是服务器每单位时间处理的请求数，注意查看是秒或是分钟。&lt;/li&gt;
  &lt;li&gt;Received KB/sec: 是每秒钟接收的字节数。&lt;/li&gt;
  &lt;li&gt;Send KB/sec: 是每秒钟请求的字节数。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;html报表报告&quot;&gt;HTML报表报告&lt;/h4&gt;
&lt;p&gt;图中配置的所有数据写入文件test-jh.jtl，可通过命令模式将其数据生成html文档，命令如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cd apache-jmeter-5.0
# bin/jmeter.sh -g report/test-jh.jtl -e -o report/test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;打开生成的html（report/test/index.html）,结果如下：&lt;/p&gt;

&lt;h5 id=&quot;首页&quot;&gt;首页&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tools/jmeter13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;apdexapplication-performance-index&quot;&gt;APDEX(Application Performance Index）&lt;/h6&gt;
&lt;p&gt;企业应用程序性能满意度标准，详见 &lt;a href=&quot;#apdex&quot;&gt;附录2 APDEX&lt;/a&gt;。&lt;/p&gt;

&lt;h6 id=&quot;requests-summary&quot;&gt;Requests Summary&lt;/h6&gt;
&lt;p&gt;样本请求的成功、失败百分占比图表。&lt;/p&gt;

&lt;h6 id=&quot;statistics&quot;&gt;Statistics&lt;/h6&gt;
&lt;p&gt;此部分结果展示的是每个样本事务的一些常见的性能测试指标，跟我们通常看到的聚合报告的表格展示非常相近，多了成功与失败的占比。&lt;/p&gt;

&lt;h6 id=&quot;errors&quot;&gt;Errors&lt;/h6&gt;
&lt;p&gt;执行结果的错误情况，根据不同的错误类型进行展示。
四列分别对应：发生错误的类型、错误数量、类型错误占比（相对于错误总数）、类型错误样本占比（相对于所有的请求样本数量）。&lt;/p&gt;

&lt;h5 id=&quot;图表&quot;&gt;图表&lt;/h5&gt;

&lt;h6 id=&quot;over-time&quot;&gt;Over Time&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tools/jmeter14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Response Times Over Time
随时间推移，样本请求响应时间的变化。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response Time Percentiles Over Time (successful responses)
随时间变化的响应时间百分比（成功响应）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Active Threads Over Time
活动线程随着时间的推移&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bytes Throughput Over Time
随时间的字节吞吐量&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Latencies Over Time
随时间推移的延迟&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Connect Time Over Time
连接时间&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;throughput吞吐量&quot;&gt;Throughput(吞吐量)&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tools/jmeter15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Hits Per Second
每秒点击次数&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Codes Per Second
每秒代码数&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Transactions Per Second
每秒事务数&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Total Transactions Per Second
每秒总交易量&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response Time Vs Request
响应时间与请求&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Latency Vs Request
延迟与请求&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;response-times响应时间&quot;&gt;Response Times(响应时间)&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tools/jmeter16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Response Time Percentiles
响应时间百分位数&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response Time Overview
响应时间概述&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Time Vs Threads
时间与线程&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response Time Distribution
响应时间分布&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;附录&quot;&gt;附录：&lt;/h3&gt;

&lt;h4 id=&quot;jmeter命令行参数&quot;&gt;Jmeter命令行参数&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tools/jmeter_ps01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;apdex&quot;&gt;&lt;span id=&quot;apdex&quot;&gt;APDEX&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;是由 APDEX 公司推出的衡量企业应用程序性能满意度标准的计算方式。其将用户的满意度用数字衡量，范围在 0-1 之间。0表示所有用户均不满意，1表示所有用户都满意；随着满意度指数的增加，用户满意度逐步增加。设定请求样本目标响应时间为t，则可容忍的响应时间设定为目标响应时间t的4倍（即为4t）。公式定义为：（满意的样本数量 + 可容忍样本数量的一半） / 总样本数量。 计算公式如下：
&lt;img src=&quot;/images/posts/tools/jmeter_ps11.png&quot; alt=&quot;&quot; /&gt;
例如：总样本数量为 1000，目标时间t=3s，750个样本响应时间小于等于t，150个样本响应时间在3s-12s之间，100个样本响应时间超过12s，则用户满意度为：
&lt;img src=&quot;/images/posts/tools/jmeter_ps12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 12 Oct 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/10/jmeter/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/10/jmeter/</guid>
        
        <category>压力测试</category>
        
        
        <category>开发工具</category>
        
      </item>
    
      <item>
        <title>IntelliJ IDEA使用小技巧</title>
        <description>&lt;p&gt;IntelliJ IDEA使用小技巧&lt;/p&gt;

&lt;h3 id=&quot;解决idea工具下tomcat中文乱码问题&quot;&gt;解决idea工具下tomcat中文乱码问题&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;在运行/调试 配置对话框的Startup/Connection面板中，勾选Pass environment variables
并添加一个environment variable，Name填 JAVA_TOOL_OPTIONS, Value填 -Dfile.encoding=UTF-8&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/tools/idea-tomcat.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/09/idea_skill/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/idea_skill/</guid>
        
        <category>IntelliJIDEA</category>
        
        
        <category>开发工具</category>
        
      </item>
    
      <item>
        <title>linux服务器架设Nginx</title>
        <description>&lt;p&gt;linux服务器架设Nginx&lt;/p&gt;

&lt;h3 id=&quot;安装nginx服务&quot;&gt;安装Nginx服务&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;添加源：默认情况Centos7中无Nginx的源，但是Nginx官网提供了Centos的源地址。因此可以如下执行命令添加源：&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;安装Nginx&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum install -y nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;启动Nginx并设置开机自动运行&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl start nginx.service
sudo systemctl enable nginx.service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;配置nginx&quot;&gt;配置Nginx&lt;/h3&gt;

&lt;p&gt;Nginx全局配置 /etc/nginx/nginx.conf
自定义Nginx站点配置文件存放目录 /etc/nginx/conf.d/&lt;/p&gt;

&lt;p&gt;网站文件存放默认目录 /usr/share/nginx/html
网站默认站点配置 /etc/nginx/conf.d/default.conf&lt;/p&gt;

&lt;h4 id=&quot;nginx启动&quot;&gt;Nginx启动&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;nginx重启&quot;&gt;Nginx重启&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nginx -s reload
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;nginx检查配置文件&quot;&gt;Nginx检查配置文件&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nginx -t
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 18 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/09/linux_nginx/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/linux_nginx/</guid>
        
        <category>linux</category>
        
        <category>Nginx</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Linux监测Tomcat运行情况</title>
        <description>&lt;p&gt;Linux监测Tomcat运行情况&lt;/p&gt;

&lt;p&gt;直接上shell代码，新建shell文件tomcatMonitor.sh，将以下内容加入其中，设置定时任务执行此shell即可&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# func:自动监控tomcat并且在异常时执行重启操作&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# 获取tomcat进程ID&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TomcatID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ps -ef |grep tomcat |grep -w &lt;span class=&quot;s1&quot;&gt;'tomcat/server'&lt;/span&gt;|grep -v &lt;span class=&quot;s1&quot;&gt;'grep'&lt;/span&gt;|awk &lt;span class=&quot;s1&quot;&gt;'{print $2}'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# tomcat启动程序&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;StartTomcat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/tomcat/server/bin/startup.sh

&lt;span class=&quot;c&quot;&gt;# 定义要监控的页面地址 &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;WebUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://localhost:8082/index.jsp


&lt;span class=&quot;c&quot;&gt;# 日志输出&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GetPageInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/data/wwwlogs/GetPageInfo.log
&lt;span class=&quot;nv&quot;&gt;TomcatMonitorLog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/data/wwwlogs/TomcatMonitor.log

Monitor&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[info]开始监控tomcat...[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;s1&quot;&gt;'%F %H:%M:%S'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TomcatID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ;&lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 这里判断TOMCAT进程是否存在&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[info]当前tomcat进程ID为:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TomcatID&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,继续检测页面...&quot;&lt;/span&gt;
		&lt;span class=&quot;c&quot;&gt;# 检测是否启动成功(成功的话页面会返回状态&quot;200&quot;)&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;TomcatServiceCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl -s -o &lt;span class=&quot;nv&quot;&gt;$GetPageInfo&lt;/span&gt; -m 10 --connect-timeout 10 &lt;span class=&quot;nv&quot;&gt;$WebUrl&lt;/span&gt; -w %&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;http_code&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TomcatServiceCode&lt;/span&gt; -eq 200 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ;&lt;span class=&quot;k&quot;&gt;then
			&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[info]页面返回码为&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TomcatServiceCode&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,tomcat启动成功,测试页面正常......&quot;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else
			&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[error]tomcat页面出错,请注意......状态码为&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TomcatServiceCode&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,错误日志已输出到&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GetPageInfo&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[error]页面访问出错,开始重启tomcat&quot;&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; -9 &lt;span class=&quot;nv&quot;&gt;$TomcatID&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 杀掉原tomcat进程&lt;/span&gt;
			sleep 3
			&lt;span class=&quot;nv&quot;&gt;$StartTomcat&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;fi
	else
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[error]tomcat进程不存在!tomcat开始自动重启...&quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[info]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$StartTomcat&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,请稍候......&quot;&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$StartTomcat&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;fi
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;------------------------------&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
Monitor&amp;gt;&amp;gt;&lt;span class=&quot;nv&quot;&gt;$TomcatMonitorLog&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 04 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/09/linux_tomcat_monitor/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/linux_tomcat_monitor/</guid>
        
        <category>Tomcat</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>MySQL调试技巧</title>
        <description>&lt;p&gt;MySQL调试技巧&lt;/p&gt;

&lt;h3 id=&quot;mysql查询最近执行sql&quot;&gt;MySQL查询最近执行SQL&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;进入MySQL,略&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;启用Log功能&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 查询是否启用Log功能
mysql&amp;gt; SHOW VARIABLES LIKE &quot;general_log%&quot;;
+--------------------+--------------------------------------------------+
| Variable_name      |    Value                                         |
+--------------------+--------------------------------------------------+
| general_log        | OFF                                              |
| general_log_file   | /usr/local/mysql/data/MacBook-Pro.log            |
+--------------------+--------------------------------------------------+
# 启用Log功能
mysql&amp;gt; SET GLOBAL general_log = 'ON';

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;设置Log文件地址(所有Sql语句都会在general_log_file里)，采用默认则不设置&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; SET GLOBAL general_log_file = 'c:\mysql.log';
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;执行mysql命令然后查看设置的Log文件，也可用其他可视化工具进行查看。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;mysql-查看连接数状态-最大并发数&quot;&gt;Mysql 查看连接数,状态 最大并发数&lt;/h3&gt;

&lt;p&gt;Threads_connected 跟show processlist结果相同，表示当前连接数。准确的来说，Threads_running是代表当前并发数&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;show variables like '%max_connections%'; 查看最大连接数
set global max_connections=1000 重新设置

mysql&amp;gt; show status like 'Threads%';
+-------------------+-------+
| Variable_name     | Value |
+-------------------+-------+
| Threads_cached    | 58    |
| Threads_connected | 57    |   ###这个数值指的是打开的连接数
| Threads_created   | 3676  |
| Threads_running   | 4     |   ###这个数值指的是激活的连接数，这个数值一般远低于connected数值
+-------------------+-------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 19 Jul 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/07/mysql_debug/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/07/mysql_debug/</guid>
        
        <category>数据库</category>
        
        <category>MySQL</category>
        
        
        <category>数据库</category>
        
      </item>
    
      <item>
        <title>MySQL备份</title>
        <description>&lt;p&gt;MySQL备份&lt;/p&gt;

&lt;h3 id=&quot;mysql-导出excel方法&quot;&gt;mysql 导出excel方法&lt;/h3&gt;
&lt;p&gt;1.执行如下命令，可将执行结果导出到excel中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql iptv_pet -uroot -p -e &quot;call SP_PET_STATISTICS(1)&quot; &amp;gt; /data/tj_20160819.xls
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql iptv_pet -uroot -p -e &quot;select user_id,code ,create_time from tbl_statistics_order where code like '%result_0' and TO_DAYS(NOW())-TO_DAYS(CREATE_TIME) = 1 order by create_time desc &quot; &amp;gt; /data/order_tj_20160822.xls
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.因为office默认的是gb2312编码，服务器端生成的很有可能是utf-8编码，采用如下命令可将其转换为gb2312编码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iconv -futf8 -tgb2312 -otj_20160819_gb2312.xls tj_20160819.xls
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;shell脚本如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +%Y%m%d&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
mysql iptv_pet -uroot -p&lt;span class=&quot;k&quot;&gt;******&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;call SP_PET_STATISTICS(1)&quot;&lt;/span&gt; &amp;gt; /data/backup/tj_&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.xls
&lt;span class=&quot;c&quot;&gt;#mysql iptv_pet -uroot -p****** -e &quot;select user_id,code ,create_time from tbl_statistics_order where code like '%result_0' and TO_DAYS(NOW())-TO_DAYS(CREATE_TIME) = 1 order by create_time desc &quot; &amp;gt; /data/backup/tj_order_${ctime}.xls&lt;/span&gt;
iconv -futf8 -tgb2312 -otj_&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;_gb2312.xls tj_&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.xls
&lt;span class=&quot;c&quot;&gt;#iconv -futf8 -tgb2312 -otj_order_${ctime}_gb2312.xls tj_order_${ctime}.xls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +%Y%m%d&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
mysql iptv_pet -uroot -p&lt;span class=&quot;k&quot;&gt;******&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&quot;call SP_PET_STATISTICS(1)&quot;&lt;/span&gt; &amp;gt; /data/backup/tj_&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;_utf8.xls
&lt;span class=&quot;c&quot;&gt;#mysql iptv_pet -uroot -p****** -e &quot;select user_id,code ,create_time from tbl_statistics_order where code like '%result_0' and TO_DAYS(NOW())-TO_DAYS(CREATE_TIME) = 1 order by create_time desc &quot; &amp;gt; /data/backup/tj_order_${ctime}_utf8.xls&lt;/span&gt;
sleep 1
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; ! -f &lt;span class=&quot;s2&quot;&gt;&quot;/data/backup/tj_&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_utf8.xls&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
&lt;/span&gt;iconv -futf8 -tgb2312 -o/data/backup/tj_&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.xls /data/backup/tj_&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;_utf8.xls
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;mysql-备份&quot;&gt;mysql 备份&lt;/h3&gt;
&lt;h4 id=&quot;1导出数据库&quot;&gt;1.导出数据库：&lt;/h4&gt;
&lt;h5 id=&quot;11-执行如下命令可导出数据库所有表的数据&quot;&gt;1.1 执行如下命令，可导出数据库所有表的数据：&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/mysql/bin/mysqldump -uroot -p iptv_pet &amp;gt; db_bak_iptv_pet_20160822.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;111-执行如下命令可导出数据库中某个表的数据&quot;&gt;1.1.1 执行如下命令，可导出数据库中某个表的数据：&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/mysql/bin/mysqldump -uroot -p iptv_pet cms_channel &amp;gt; db_bak_iptv_pet_cmschannel_20160822.sql

/usr/local/mysql/bin/mysqldump -uroot -p iptv_pet cms_channel cms_document &amp;gt; db_bak_iptv_pet_cmschannel_20160822.sql

/usr/local/mysql/bin/mysqldump -uroot -p iptv_pet tbl_stat_order tbl_stat_click tbl_stat_click_manage &amp;gt; db_bak_tbl_stat_20170301.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;112-执行如下命令可导出数据库中某个表的部分数据&quot;&gt;1.1.2 执行如下命令，可导出数据库中某个表的部分数据&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/mysql/bin/mysqldump -uroot -p iptv_pet tbl_statistics_player_201705 --where=&quot; TO_DAYS(NOW()) - TO_DAYS(CREATE_TIME) = 1&quot; &amp;gt; db_bak_tbl_statistics_player_20170505.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;12-执行如下命令可导出数据库存储过程&quot;&gt;1.2 执行如下命令，可导出数据库存储过程：&lt;/h5&gt;
&lt;p&gt;注意：–events必须在数据库名称后面&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/mysql/bin/mysqldump -uroot -p -n -t -d -R --triggers=false iptv_pet --events &amp;gt; db_bak_iptv_pet_sp_20160822.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;2编写shell文件定时备份&quot;&gt;2.编写shell文件，定时备份&lt;/h4&gt;
&lt;h5 id=&quot;21-需求如下&quot;&gt;2.1 需求如下：&lt;/h5&gt;
&lt;p&gt;2.1.1 每天4点备份mysql数据&lt;/p&gt;

&lt;p&gt;2.1.2 为节省空间，删除超过3个月的所有备份数据；&lt;/p&gt;

&lt;p&gt;2.1.3 删除超过7天的备份数据，保留3个月里的 10号 20号 30号的备份数据；&lt;/p&gt;

&lt;h5 id=&quot;22-实现方式如下&quot;&gt;2.2 实现方式如下：&lt;/h5&gt;
&lt;p&gt;2.2.1 创建shell文件&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim backup_mysql.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;2.2.2 编辑shell文件，内容如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysqldump -uroot -p123456 --all-databases &amp;gt; /data/dbdata/mysqlbak/`date +%Y%m%d`.sql
find /data/dbdata/mysqlbak/ -mtime +7 -name '*[1-9].sql' -exec rm -rf {} \;
find /data/dbdata/mysqlbak/ -mtime +92 -name '*.sql' -exec rm -rf {} \;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;2.2.3 创建定时任务&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;crontab –e
0 4 * * * /data/dbdata/backup_mysql.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;mysql-还原&quot;&gt;mysql 还原&lt;/h3&gt;
&lt;p&gt;导入数据&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; source /home/qinglan/data/mysql/iptv_health.sql
Query OK, 0 rows affected (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

Query OK, 0 rows affected, 1 warning (0.00 sec)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;日常操作语句归纳&quot;&gt;日常操作语句归纳&lt;/h3&gt;
&lt;p&gt;mysql 添加表字段&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alter table tbl_exp_card add activation_user varchar(50) NULL COMMENT '激活用户';
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;mysql 取消timestamp列默认为设置成记录被更新时的时间戳&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ALTER TABLE tbl_statistics_order CHANGE CREATE_TIME CREATE_TIME timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '统计时间';
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 19 Jul 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/07/mysql_backup/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/07/mysql_backup/</guid>
        
        <category>数据库</category>
        
        <category>MySQL</category>
        
        
        <category>数据库</category>
        
      </item>
    
  </channel>
</rss>
